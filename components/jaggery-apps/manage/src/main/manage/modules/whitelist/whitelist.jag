<%
var isAdmin = jagg.getUser().isAdmin;
var isOperator = jagg.getUser().operator;
var site = require("/site/conf/site.json");

//var addBulkURL = "http://10.62.96.185:8280/customerProfile/queries/Whitelist";

var addBulkURL = getLocationRestUrl();//"http://localhost:8090/locationrest/queries/Whitelist";

function getLocationRestUrl() {
	//var site = require("/site/conf/site.json");
	var hostPort = site.externalServicesUrl;
	return hostPort + "blacklist-whitelist-service/queries/Whitelist";
}
%>
<%
//     {
//     "apiID":"1", "apiName":"USSD", "userID":"admin"
//     "msisdnList":["94777000001","94777000002","94777000003"] 
//     }

function addNewToWhitelist(subscriberList, appId, apiId){
	var log = new Log();
	var addBulkURL = site.externalServicesUrl + "blacklist-whitelist-service/queries/Whitelist";
	var subscribers = subscriberList.split(",");
// 	log.info("Whitelist Log 004: subscribers >> "+ stringify(subscribers));
	
	subscribers = urlEncode(subscribers);
// 	log.info("Whitelist Log 005: subscribers >> "+ stringify(subscribers));
	
	// Invoke bulk-add API
	log.info(subscribers);
	var data = {
		/*"apiID":"1",*/
		/* "apiName":api, */
		"appId" : appId,
		"apiId" : apiId,
		"userID":jagg.getUser().username,
		"msisdnList":subscribers
	};
	var response = postJSON(addBulkURL, data);
	return response;//return 1;
}

function getWhitelist() {
    var log = new Log();
    var url = site.externalServicesUrl + "blacklist-whitelist-service/queries/GetWhiteList";
    var data = {};
    var response = postJSON(url, data);
    response = JSON.parse(response);

    try {
        if (response.Success) {

            var whiteListedNumbers = response.Success.variables;
            log.debug("response.Success.variables = " + response.Success.variables);

            if (whiteListedNumbers) {
                return whiteListedNumbers;
            } else {
                return "";
            };
        } else {
            var errorMsg = stringify(response);
            log.error(errorMsg);
            return {error: true,message: errorMsg};
        }

    } catch (e) {
        log.error(e.message);
        return {error: true,message: e.message};
    }
}

function removeFromWhiteListNumbers(subscriber){
	
	var log = new Log();
	var subscribe = "tel3A+"+subscriber;
	log.info("subscriber: " + subscribe);
	var newURL = site.externalServicesUrl + "blacklist-whitelist-service/queries/RemoveFromWhiteList/" + subscribe;

	var response = postJSON(newURL);
	log.info("response = " + response);

	return 1;
}


function getSubscribers() {
	var url = site.externalServicesUrl + "blacklist-whitelist-service/queries/getSubscribers";
	var data = {};
	var response = postJSON(url, data);
	return response;
}

function getSubscribersOfProvider (){
	var url = site.externalServicesUrl + "blacklist-whitelist-service/queries/subscribers";
	var data = {};
	var response = postJSON(url, data);
	return response;
}
function getApps(subscriberId) {
	var url = site.externalServicesUrl + "blacklist-whitelist-service/queries/apps";
// 	var response = postJSON(url, "{\"id\":\"" + subscriberId + "\"}");
	var data = {
			"id":subscriberId
		};
	var response = postJSON(url, data);
	return response;
}

function getApis(subscriberId, appId) {
	var url = site.externalServicesUrl + "blacklist-whitelist-service/queries/apis";
	var data = {
				"id":subscriberId + "|" + appId

			};
	var response = postJSON(url, data);
	return response;
}

function postJSON(url, data) {
	var log = new Log();
	log.info("data = " + JSON.stringify(data));
	var request = {
		url: url, payload: JSON.stringify(data), handler: function(response) {
			return JSON.parse(response).result;
		}
	};
	log.info("request = " + JSON.stringify(request));
	var ajax = new XMLHttpRequest();
	ajax.open("POST", request.url, false);
	ajax.setRequestHeader("Content-type", "application/json");
	ajax.onreadystatechange = function() {
		if (ajax.readyState == 4) {
			log.info("ajax onreadystatechange");
			request.handler.call(request, ajax.responseText);
		}
	};
	ajax.send(request.payload);
	return ajax.responseText;
}

function urlEncode(subscribers){
	var log2 = new Log();
	log2.info("subscribers=" + stringify(subscribers));
	var validSubscribers = new Array();
	for (i = 0; i < subscribers.length; i++) {
		if(subscribers[i] != null && subscribers[i].length > 0) {
			log2.info("PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP");
// 	    	subscribers[i] = "tel3A+" + subscribers[i];
	    	validSubscribers[validSubscribers.length] = "tel3A+" + subscribers[i];
	    	log2.info("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLll" + stringify(validSubscribers[validSubscribers.length-1] ));
	    }
	}
// 	return subscribers;
	return validSubscribers;
}

%>
